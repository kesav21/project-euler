#!/usr/bin/env python

from tools import sieve
from timeit import timeit


def main():
    upper_a = 1000
    upper_b = 1000

    brange = list(sieve(upper_b))

    primes = list(sieve(f(upper_b, upper_a, upper_b)))

    p = permutations(brange)
    for (a, b) in p:
        if prime_check(a, b, primes):
            print(a, b, prime_count1(a, b, primes))


def permutations(brange):
    return (
        (a, b) for b in brange for a in range(-2 * int(b ** 0.5), 2 * int(b ** 0.5))
    )


def prime_count1(a, b, primes):
    for n in range(1, b + 1):
        if f(n, a, b) not in primes:
            return n


def prime_check(a, b, primes):
    for n in range(1, 40):
        if f(n, a, b) not in primes:
            return False
    return True


def f(n, a, b):
    return n ** 2 + a * n + b


if __name__ == "__main__":
    main()
