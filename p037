#!/usr/bin/env python


def main():
    num = sum(get_interesting_primes(1_000_000))
    print(num)


def get_interesting_primes(n):
    primes = set(sieve(n))
    for i in primes - {2, 3, 5, 7}:
        truncations = set(get_truncations(i))
        if all(i in primes for i in truncations):
            yield i


def get_truncations(i):
    yield int(i)
    for j in range(1, len(str(i))):
        yield int(str(i)[j:])
        yield int(str(i)[:j])


def sieve(n):
    """
    an implementation of the sieve of erastothenes,
    used to find prime numbers
    """
    primes = list(range(n + 1))
    primes[1] = 0
    for i in primes:
        if i != 0 and i < int(n ** 0.5):
            for j in range(2 * i, n + 1, i):
                primes[j] = 0
    for i in primes:
        if i != 0:
            yield i


if __name__ == "__main__":
    main()
